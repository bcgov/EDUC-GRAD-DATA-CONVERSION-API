name: Deploy to TEST

env:
  # 🖊️ EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: ${{ secrets.GRAD_BUSINESS_NAMESPACE }}-test

  SPRING_BOOT_IMAGE_NAME: educ-grad-data-conversion-api-dc

  REPO_NAME: "educ-grad-data-conversion-api"
  APP_DOMAIN: ${{ secrets.APP_DOMAIN }}
  NAMESPACE: ${{ secrets.GRAD_BUSINESS_NAMESPACE }}
  TAG: "latest"

  # TODO: add below to DC
  MIN_REPLICAS: "3"
  MAX_REPLICAS: "3"
  MIN_CPU: "75m"
  MAX_CPU: "150m"
  MIN_MEM: "400Mi"
  MAX_MEM: "800Mi"

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  workflow_dispatch:

jobs:
  deploy-to-openshift-test:
    name: Deploy to OpenShift TEST
    runs-on: ubuntu-20.04
    environment: test

    outputs:
      ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
      SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Get latest tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

        # https://github.com/redhat-actions/oc-login#readme
      - uses: actions/checkout@v2
      - name: Deploy
        run: |
          set -eux
          # Login to OpenShift and select project
          oc login --token=${{ env.OPENSHIFT_TOKEN }} --server=${{ env.OPENSHIFT_SERVER }}
          oc project ${{ env.OPENSHIFT_NAMESPACE }}
          # Cancel any rollouts in progress
          oc rollout cancel dc/${{ env.SPRING_BOOT_IMAGE_NAME }} 2> /dev/null \
          || true && echo "No rollout in progress"
          
          oc tag ${{ env.NAMESPACE }}-dev/${{ env.REPO_NAME }}:${{ steps.get-latest-tag.outputs.tag }} ${{ env.NAMESPACE }}-test/${{ env.REPO_NAME }}:${{ steps.get-latest-tag.outputs.tag }}
          
          # Process and apply deployment template
          oc process -f tools/openshift/api.dc.yaml -p IS_NAMESPACE=${{ env.OPENSHIFT_NAMESPACE }} -p REPO_NAME=${{ env.REPO_NAME }} -p TAG_NAME=${{ steps.get-latest-tag.outputs.tag }} -p HOST_ROUTE=${{ env.REPO_NAME }}-${{ env.OPENSHIFT_NAMESPACE }}.${{ env.APP_DOMAIN }}  \
          | oc apply -f -
          
          # Start rollout (if necessary) and follow it
          oc rollout latest dc/${{ env.SPRING_BOOT_IMAGE_NAME }} 2> /dev/null \
          || true && echo "Rollout in progress"
          oc logs -f dc/${{ env.SPRING_BOOT_IMAGE_NAME }}
          # Get status, returns 0 if rollout is successful
          oc rollout status dc/${{ env.SPRING_BOOT_IMAGE_NAME }}
