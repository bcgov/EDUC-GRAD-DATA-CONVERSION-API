#DB Properties
spring:
  jmx:
    enabled: false
  datasource:
    hikari:
      pool-name: conv-primary-cp
      connection-timeout: ${CONNECTION_TIMEOUT}
      maximum-pool-size: ${MAXIMUM_POOL_SIZE}
      minimum-idle: ${MIN_IDLE}
      idle-timeout: ${IDLE_TIMEOUT}
      max-lifetime: ${MAX_LIFETIME}
    username: ${CONV_USERNAME}
    password: ${CONV_PASSWORD}
    url: ${CONNECTION_STRING}
    driver-class-name: oracle.jdbc.driver.OracleDriver
  jpa:
    show-sql: ${SHOW_SQL_LOGS}
    database-platform: org.hibernate.dialect.OracleDialect
    hibernate:
      ddl-auto: none
  mvc:
    log-request-details: ${SPRING_SHOW_REQUEST_DETAILS}
  jackson:
    deserialization:
      fail-on-unknown-properties: false
  #Keycloak/OAuth properties
  security:
    user:
      name: ${API_USERNAME}
      password: ${API_PASSWORD}
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${TOKEN_ISSUER_URL}
          jwk-set-uri: ${TOKEN_ISSUER_URL}/protocol/openid-connect/certs
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: NEVER
  flyway:
    enabled: ${ENABLE_FLYWAY}
    baseline-on-migrate: ${BASELINE_ON_MIGRATE}
    table: FLYWAY_SCHEMA_HISTORY
    url: ${CONNECTION_STRING}
    schema: ${CONV_USERNAME}
    user: ${CONV_USERNAME}
    password: ${CONV_PASSWORD}
    location: classpath:db/migration

#Logging properties
logging:
  file:
    name: /logs/app.log
  logback:
    rollingpolicy:
      max-history: 1
      max-file-size: 20MB
      clean-history-on-start: true
  pattern:
    #  file: "%d | [${HOSTNAME}] | %clr(%5p) | [%t]   | %logger{36}:%L | %msg%n"
    #  console: "%d | [${HOSTNAME}] | %clr(%5p) | [%t]   | %logger{36}:%L | %msg%n"
    file: '{"time_stamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%3p" ,"thread":"%t" ,"class":"%logger{36}","msg":"%replace(%msg){"[\n\r\"]",""}", "exception":"%replace(%rEx{10}){"[\n\r\"]",""}","http_event":%X{httpEvent:-""},"message_event":%X{messageEvent:-""}}%nopex%n'
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%5p] [%t] [%logger{36}] [%replace(%msg){'[\n\r\"]',''} %X{httpEvent} %X{messageEvent}] %replace(%rEx{10}){'[\n\r\"]',''}%nopex%n"
  level:
    ca:
      bc:
        gov:
          educ:
            api:
              dataconversion: ${APP_LOG_LEVEL}
    org:
      springframework:
        web: ${SPRING_WEB_LOG_LEVEL}
        security: ${SPRING_SECURITY_LOG_LEVEL}
        boot:
          autoconfigure:
            logging: ${SPRING_BOOT_AUTOCONFIG_LOG_LEVEL}
    com:
      zaxxer:
        hikari: ERROR

#Local properties
server:
  undertow:
    threads:
      worker: 128
      io: 16
  #port: ${HTTP_PORT}

#API Documentation
springdoc:
  api-docs:
    path: /api/v1/api-docs
  swagger-ui:
    path: /api/v1/api-docs-ui.html
    operationsSorter: alpha

#Resilience
resilience4j.retry:
  instances:
    rt-getToken:
      maxAttempts: 35
      waitDuration: 5s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
      ignoreExceptions:
        - java.lang.NullPointerException
    rt-getTraxStudent:
      maxAttempts: ${MAX_RETRY_ATTEMPTS}
      waitDuration: 5s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
      ignoreExceptions:
        - java.lang.NullPointerException
    rt-getStudentGradStatus:
      maxAttempts: ${MAX_RETRY_ATTEMPTS}
      waitDuration: 5s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
      ignoreExceptions:
        - java.lang.NullPointerException
    rt-saveStudentGradStatus:
      maxAttempts: ${MAX_RETRY_ATTEMPTS}
      waitDuration: 5s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
      ignoreExceptions:
        - java.lang.NullPointerException
    rt-updateStudentGradStatus:
      maxAttempts: ${MAX_RETRY_ATTEMPTS}
      waitDuration: 5s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
      ignoreExceptions:
        - java.lang.NullPointerException
    rt-conversionStatus:
      maxAttempts: ${MAX_RETRY_ATTEMPTS}
      waitDuration: 5s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
      ignoreExceptions:
        - java.lang.NullPointerException

authorization:
  user: ${GRAD_CLIENT_NAME}
  password: ${GRAD_CLIENT_SECRET}

#NATS
nats:
  url: ${NATS}
  maxReconnect: ${NATS_MAX_RECONNECT}
  connectionName: GRAD-DATA-CONVERSION-API

#Scheduler
cron:
  scheduled:
    process:
      events:
        stan:
          run: ${CRON_SCHEDULED_PROCESS_EVENTS_STAN}
          lockAtLeastFor: ${CRON_SCHEDULED_PROCESS_EVENTS_STAN_LOCK_AT_LEAST_FOR}
          lockAtMostFor: ${CRON_SCHEDULED_PROCESS_EVENTS_STAN_LOCK_AT_MOST_FOR}
          threshold: ${CRON_SCHEDULED_PROCESS_EVENTS_STAN_THRESHOLD}
      purge-old-records:
        run: ${CRON_SCHEDULED_PURGE_OLD_RECORDS}
        staleInDays: ${RECORDS_STALE_IN_DAYS}

#Endpoints
endpoint:
  keycloak:
    getToken: ${KEYCLOAK_TOKEN_URL}auth/realms/master/protocol/openid-connect/token
  pen-student-api:
    by-pen:
      url: ${PEN_STUDENT_API}api/v1/student?pen=%s
  grad-course-api:
    course-restriction:
      url: ${GRAD_COURSE_API}api/v1/course/get-course-restriction
    save-course-restriction:
      url: ${GRAD_COURSE_API}api/v1/course/save-course-restriction
    check-course-requirement:
      url: ${GRAD_COURSE_API}api/v1/course/check-course-requirement
    save-course-requirement:
      url: ${GRAD_COURSE_API}api/v1/course/save-course-requirement
    student-courses-by-pen:
      url: ${GRAD_COURSE_API}api/v1/course/studentcourse/pen
    check-french-immersion-course:
      url: ${GRAD_COURSE_API}api/v1/course/studentcourse/check-french-immersion-course
    check-french-immersion-course-for-en:
      url: ${GRAD_COURSE_API}api/v1/course/studentcourse/check-french-immersion-course-for-en
    check-blank-language-course:
      url: ${GRAD_COURSE_API}api/v1/course/check-blank-language-course
    check-french-language-course:
      url: ${GRAD_COURSE_API}api/v1/course/check-french-language-course
  grad-program-api:
    special-program:
      url: ${GRAD_PROGRAM_API}api/v1/program/optionalprograms
    optional-program-by-id:
      url: ${GRAD_PROGRAM_API}api/v1/program/optionalprograms/id
  grad-student-api:
    add-new-pen:
      url: ${GRAD_STUDENT_API}api/v1/student
    save-grad-student-record: ${GRAD_STUDENT_API}api/v1/student/conv/studentid/%s
    read-grad-student-record: ${GRAD_STUDENT_API}api/v1/student/studentid/%s/algorithm
    save-student-optional-program: ${GRAD_STUDENT_API}api/v1/student/conv/studentoptionalprogram
    remove-student-optional-program: ${GRAD_STUDENT_API}api/v1/student/conv/studentoptionalprogram/%s/%s
    read-student-optional-programs: ${GRAD_STUDENT_API}api/v1/student/optionalprogram/studentid/%s
    save-student-career-program: ${GRAD_STUDENT_API}api/v1/student/conv/studentcareerprogram
    remove-student-career-program: ${GRAD_STUDENT_API}api/v1/student/conv/studentcareerprogram/%s/%s
    read-student-career-programs: ${GRAD_STUDENT_API}api/v1/student/studentcareerprogram/studentid/%s
    save-grad-student-record-for-ongoing-updates: ${GRAD_STUDENT_API}api/v1/student/conv/ongoingupdate/gradstatus
    get-student-by-pen: ${GRAD_STUDENT_API}api/v1/student/pen/%s
    get-student-notes-by-studentID: ${GRAD_STUDENT_API}api/v1/student/studentnotes/studentid/%s
  grad-assessment-api:
    assessment-requirement:
      url: ${GRAD_ASSESSMENT_API}api/v1/assessment/requirement
    student-assessments:
      by-pen:
        url: ${GRAD_ASSESSMENT_API}api/v1/assessment/pen/%s
  grad-trax-api:
    student:
      get-student-no-list-by-page:
        url: ${GRAD_TRAX_API}api/v1/trax/common/student-no-list/paginated
      get-total-number-of-student-no-list:
        url: ${GRAD_TRAX_API}api/v1/trax/common/student-no-list/total-count
      get-student-demog-data:
        url: ${GRAD_TRAX_API}api/v1/trax/common/student-demog
      get-student-master-data:
        url: ${GRAD_TRAX_API}api/v1/trax/common/student-master
      save-trax-student-no:
        url: ${GRAD_TRAX_API}api/v1/trax/common/trax-student-no
    course:
      get-course-restrictions:
        url: ${GRAD_TRAX_API}api/v1/trax/common/course-restrictions
      get-course-requirements:
        url: ${GRAD_TRAX_API}api/v1/trax/common/course-requirements
  grad-graduation-report-api:
    delete-student-achievements:
      url: ${GRAD_GRADUATION_REPORT_API}/api/v1/graduationreports/studentachievement/{studentID}


#Incremental Grad Update
grad:
  update:
    enabled: ${ENABLE_GRAD_UPDATE}

#Page Size for Parallel Processing
batch:
  partitions:
    number: ${NUMBER_OF_PARTITIONS}
  token-expiry:
    offset: ${TOKEN_EXPIRY_OFFSET}

#Splunk LogHelper
splunk:
  log-helper:
    enabled: ${ENABLE_SPLUNK_LOG_HELPER}
