#Keycloak/OAuth properties
security:
  oauth2:
    resource:
      jwt:
        key-value: ${KEYCLOAK_PUBLIC_KEY}

#DB Properties
spring:
  jmx:
    enabled: false
  db-connection:
    url: ${CONNECTION_STRING}
    driver-class: oracle.jdbc.OracleDriver
    hikari:
      maximum-pool-size: ${MAXIMUM_POOL_SIZE}
      connection-timeout: ${CONNECTION_TIMEOUT}
      max-lifetime: ${MAX_LIFETIME}
      keepalive-time: ${KEEP_ALIVE_TIME}
    batch:
      username: ${BATCH_USERNAME}
      password: ${BATCH_PASSWORD}
      pool-name: conv-batch-cp
    conv:
      username: ${CONV_USERNAME}
      password: ${CONV_PASSWORD}
      pool-name: conv-primary-cp
    student:
      username: ${STUDENT_USERNAME}
      password: ${STUDENT_PASSWORD}
      pool-name: conv-student-cp
    trax:
      username: ${TRAX_USERNAME}
      password: ${TRAX_PASSWORD}
      pool-name: conv-trax-cp
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.Oracle12cDialect
    hibernate:
      ddl-auto: none
  mvc:
    log-request-details: ${SPRING_SHOW_REQUEST_DETAILS}
  jackson:
    deserialization:
      fail-on-unknown-properties: false
  security:
    user:
      name: ${API_USERNAME}
      password: ${API_PASSWORD}
  batch:
    initialize-schema: NEVER
    job:
      enabled: false
  flyway:
    enabled: ${ENABLE_FLYWAY}
    baseline-on-migrate: ${BASELINE_ON_MIGRATE}
    table: FLYWAY_SCHEMA_HISTORY
    url: ${CONNECTION_STRING}
    schema: ${CONV_USERNAME}
    user: ${CONV_USERNAME}
    password: ${CONV_PASSWORD}
    location: classpath:db/migration

#Logging properties
logging:
  file:
    name: /logs/app.log
  logback:
    rollingpolicy:
      max-history: 1
      max-file-size: 5MB
      clean-history-on-start: true
  pattern:
    #  file: "%d | [${HOSTNAME}] | %clr(%5p) | [%t]   | %logger{36}:%L | %msg%n"
    #  console: "%d | [${HOSTNAME}] | %clr(%5p) | [%t]   | %logger{36}:%L | %msg%n"
    file: '{"time_stamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%3p" ,"thread":"%t" ,"class":"%logger{36}","msg":"%replace(%msg){"[\n\r\"]",""}", "exception":"%replace(%rEx{10}){"[\n\r\"]",""}","http_event":%X{httpEvent:-""},"message_event":%X{messageEvent:-""}}%nopex%n'
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%5p] [%t] [%logger{36}] [%replace(%msg){'[\n\r\"]',''} %X{httpEvent} %X{messageEvent}] %replace(%rEx{10}){'[\n\r\"]',''}%nopex%n"
  level:
    ca:
      bc:
        gov:
          educ:
            api:
              dataconversion: ${APP_LOG_LEVEL}
    org:
      springframework:
        web: ${SPRING_WEB_LOG_LEVEL}
        security: ${SPRING_SECURITY_LOG_LEVEL}
        boot:
          autoconfigure:
            logging: ${SPRING_BOOT_AUTOCONFIG_LOG_LEVEL}
#    com:
#      zaxxer:
#        hikari: ERROR

#Local properties
server:
  undertow:
    threads:
      worker: 128
      io: 16
  #port: ${HTTP_PORT}

#API Documentation
springdoc:
  api-docs:
    path: /api/v1/api-docs
  swagger-ui:
    path: /api/v1/api-docs-ui.html
    operationsSorter: alpha

authorization:
  user: ${GRAD_CLIENT_NAME}
  password: ${GRAD_CLIENT_SECRET}

#NATS
nats:
  url: ${NATS}
  maxReconnect: ${NATS_MAX_RECONNECT}
  connectionName: GRAD-DATA-CONVERSION-API

#Scheduler
cron:
  scheduled:
    process:
      events:
        stan:
          run: ${CRON_SCHEDULED_PROCESS_EVENTS_STAN}
          lockAtLeastFor: ${CRON_SCHEDULED_PROCESS_EVENTS_STAN_LOCK_AT_LEAST_FOR}
          lockAtMostFor: ${CRON_SCHEDULED_PROCESS_EVENTS_STAN_LOCK_AT_MOST_FOR}

#Endpoints
endpoint:
  keycloak:
    getToken: ${KEYCLOAK_TOKEN_URL}auth/realms/master/protocol/openid-connect/token
  pen-student-api:
    by-pen:
      url: ${PEN_STUDENT_API}api/v1/student?pen=%s
  grad-course-api:
    course-restriction:
      url: ${GRAD_COURSE_API}api/v1/course/get-course-restriction
    save-course-restriction:
      url: ${GRAD_COURSE_API}api/v1/course/save-course-restriction
    check-course-requirement:
      url: ${GRAD_COURSE_API}api/v1/course/check-course-requirement
    save-course-requirement:
      url: ${GRAD_COURSE_API}api/v1/course/save-course-requirement
    student-courses-by-pen:
      url: ${GRAD_COURSE_API}api/v1/studentcourse/pen
    check-french-immersion-course:
      url: ${GRAD_COURSE_API}api/v1/studentcourse/check-french-immersion-course
    check-french-immersion-course-for-en:
      url: ${GRAD_COURSE_API}api/v1/studentcourse/check-french-immersion-course-for-en
    check-blank-language-course:
      url: ${GRAD_COURSE_API}api/v1/course/check-blank-language-course
    check-french-language-course:
      url: ${GRAD_COURSE_API}api/v1/course/check-french-language-course
  grad-program-api:
    special-program:
      url: ${GRAD_PROGRAM_API}api/v1/program/optionalprograms
    optional-program-by-id:
      url: ${GRAD_PROGRAM_API}api/v1/program/optionalprograms/id
    career-program:
      url: ${GRAD_PROGRAM_API}api/v1/program/careerprogram
  grad-student-api:
    add-new-pen:
      url: ${GRAD_STUDENT_API}api/v1/student
  grad-assessment-api:
    assessment-requirement:
      url: ${GRAD_ASSESSMENT_API}api/v1/assessment/requirement
    student-assessments-by-pen:
      url: ${GRAD_ASSESSMENT_API}api/v1/assessment/pen


#Conversion option
data-conversion:
  student-guid-pen-xref:
    enabled:  ${ENABLE_STUDENT_ID_PEN_XREF}

#Incremental Grad Update
grad:
  update:
    enabled: ${ENABLE_GRAD_UPDATE}

#Page Size
batch:
  partitions:
    number: ${NUMBER_OF_PARTITIONS}
