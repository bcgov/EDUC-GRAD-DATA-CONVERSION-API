---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: "${REPO_NAME}-deploy-template"
metadata:
  name: "${REPO_NAME}-deploy-template"
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${REPO_NAME}"
        app.kubernetes.io/part-of: GRAD-Backend-API
        app.openshift.io/runtime: spring-boot
      name: "${REPO_NAME}-dc"
    spec:
      replicas: 1
      revisionHistoryLimit: 1
      triggers: []
      selector:
        app: "${REPO_NAME}"
        deploymentConfig: "${REPO_NAME}-dc"
      strategy:
        resources: {}
        type: Rolling
      template:
        metadata:
          labels:
            app: "${REPO_NAME}"
            deploymentConfig: "${REPO_NAME}-dc"
        spec:
          containers:
            - image: image-registry.openshift-image-registry.svc:5000/${IS_NAMESPACE}/${REPO_NAME}:${TAG_NAME}
              imagePullPolicy: Always
              volumeMounts:
              - name: log-storage
                mountPath: /logs
              readinessProbe:
                tcpSocket:
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 60
                timeoutSeconds: 10
                failureThreshold: 10
                successThreshold: 1
              livenessProbe:
                httpGet:
                  path: /actuator/health
                  port: 8080
                initialDelaySeconds: 120
                periodSeconds: 60
                timeoutSeconds: 10
                failureThreshold: 10
                successThreshold: 1
              name: "${REPO_NAME}"
              ports:
                - containerPort: ${{CONTAINER_PORT}}
                  protocol: TCP
              resources:
                requests:
                  cpu: "50m"
                  memory: "1024Mi"
                limits:
                  cpu: "250m"
                  memory: "2048Mi"
              envFrom:
                - configMapRef:
                    name: educ-grad-api-config-map
                - configMapRef:
                    name: educ-grad-data-conversion-api-config-map
                - configMapRef:
                    name: educ-grad-nats-messaging-config-map
                - secretRef:
                    name: api-grad-conv-db-secret
                - secretRef:
                    name: grad-client-secret
            - image: artifacts.developer.gov.bc.ca/docker-remote/fluent/fluent-bit:1.5.7
              name: "${REPO_NAME}-fluent-bit-sidecar"
              imagePullPolicy: Always
              imagePullSecrets:
                - name: artifactory-creds
              volumeMounts:
                - name: log-storage
                  mountPath: /mnt/log
                - name: flb-sc-config-volume
                  mountPath: /fluent-bit/etc/
              readinessProbe:
                tcpSocket:
                  port: 2020
                initialDelaySeconds: 10
                periodSeconds: 30
                timeoutSeconds: 5
                failureThreshold: 5
                successThreshold: 1
              livenessProbe:
                httpGet:
                  path: /
                  port: 2020
                initialDelaySeconds: 10
                periodSeconds: 30
                timeoutSeconds: 5
                failureThreshold: 5
                successThreshold: 1
              ports:
                - containerPort: 2020
                  protocol: TCP
                  name: metrics
              resources:
                requests:
                  cpu: "25m"
                  memory: "50Mi"
                limits:
                  cpu: "50m"
                  memory: "100Mi"
          volumes:
            - name: log-storage
              emptyDir: { }
            - name: flb-sc-config-volume
              configMap:
                name: "${REPO_NAME}-flb-sc-config-map"
      test: false
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: "${REPO_NAME}"
      name: "${REPO_NAME}"
    spec:
      ports:
        - name: ${CONTAINER_PORT}-tcp
          port: ${{CONTAINER_PORT}}
          protocol: TCP
      selector:
        app: "${REPO_NAME}"
        deploymentconfig: "${REPO_NAME}-dc"
parameters:
  - name: REPO_NAME
    description: Application repository name
    required: true
  - name: IS_NAMESPACE
    description: The namespace where the imagestream lives
    required: true
  - name: TAG_NAME
    description: Imagestream tag name
    required: false
    value: latest
  - name: HOST_ROUTE
    description: The host the route will use to expose service outside cluster
    required: true
  - name: CONTAINER_PORT
    description: The port on which the application will be accessible
    required: false
    value: "8080"
  - name: HOST_PATH
    description: The path appended to the HOST_ROUTE where the root of this project will be served
    required: false
    value: "/"
